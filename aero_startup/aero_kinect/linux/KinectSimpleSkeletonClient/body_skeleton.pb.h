// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: body_skeleton.proto

#ifndef PROTOBUF_body_5fskeleton_2eproto__INCLUDED
#define PROTOBUF_body_5fskeleton_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace bodyskeleton {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_body_5fskeleton_2eproto();
void protobuf_AssignDesc_body_5fskeleton_2eproto();
void protobuf_ShutdownFile_body_5fskeleton_2eproto();

class Joint;
class Orientation;
class Position;
class User;

// ===================================================================

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  inline Position* New() const { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:bodyskeleton.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_body_5fskeleton_2eproto();
  friend void protobuf_AssignDesc_body_5fskeleton_2eproto();
  friend void protobuf_ShutdownFile_body_5fskeleton_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class Orientation : public ::google::protobuf::Message {
 public:
  Orientation();
  virtual ~Orientation();

  Orientation(const Orientation& from);

  inline Orientation& operator=(const Orientation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Orientation& default_instance();

  void Swap(Orientation* other);

  // implements Message ----------------------------------------------

  inline Orientation* New() const { return New(NULL); }

  Orientation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Orientation& from);
  void MergeFrom(const Orientation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Orientation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // optional float w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:bodyskeleton.Orientation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_body_5fskeleton_2eproto();
  friend void protobuf_AssignDesc_body_5fskeleton_2eproto();
  friend void protobuf_ShutdownFile_body_5fskeleton_2eproto();

  void InitAsDefaultInstance();
  static Orientation* default_instance_;
};
// -------------------------------------------------------------------

class Joint : public ::google::protobuf::Message {
 public:
  Joint();
  virtual ~Joint();

  Joint(const Joint& from);

  inline Joint& operator=(const Joint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Joint& default_instance();

  void Swap(Joint* other);

  // implements Message ----------------------------------------------

  inline Joint* New() const { return New(NULL); }

  Joint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Joint& from);
  void MergeFrom(const Joint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Joint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string parent = 2;
  void clear_parent();
  static const int kParentFieldNumber = 2;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // optional .bodyskeleton.Position position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  const ::bodyskeleton::Position& position() const;
  ::bodyskeleton::Position* mutable_position();
  ::bodyskeleton::Position* release_position();
  void set_allocated_position(::bodyskeleton::Position* position);

  // optional .bodyskeleton.Orientation orientation = 4;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 4;
  const ::bodyskeleton::Orientation& orientation() const;
  ::bodyskeleton::Orientation* mutable_orientation();
  ::bodyskeleton::Orientation* release_orientation();
  void set_allocated_orientation(::bodyskeleton::Orientation* orientation);

  // @@protoc_insertion_point(class_scope:bodyskeleton.Joint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::bodyskeleton::Position* position_;
  ::bodyskeleton::Orientation* orientation_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_body_5fskeleton_2eproto();
  friend void protobuf_AssignDesc_body_5fskeleton_2eproto();
  friend void protobuf_ShutdownFile_body_5fskeleton_2eproto();

  void InitAsDefaultInstance();
  static Joint* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bodyskeleton.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_body_5fskeleton_2eproto();
  friend void protobuf_AssignDesc_body_5fskeleton_2eproto();
  friend void protobuf_ShutdownFile_body_5fskeleton_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// optional float x = 1;
inline void Position::clear_x() {
  x_ = 0;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Position.x)
  return x_;
}
inline void Position::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Position.x)
}

// optional float y = 2;
inline void Position::clear_y() {
  y_ = 0;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Position.y)
  return y_;
}
inline void Position::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Position.y)
}

// optional float z = 3;
inline void Position::clear_z() {
  z_ = 0;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Position.z)
  return z_;
}
inline void Position::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Position.z)
}

// -------------------------------------------------------------------

// Orientation

// optional float x = 1;
inline void Orientation::clear_x() {
  x_ = 0;
}
inline float Orientation::x() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Orientation.x)
  return x_;
}
inline void Orientation::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Orientation.x)
}

// optional float y = 2;
inline void Orientation::clear_y() {
  y_ = 0;
}
inline float Orientation::y() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Orientation.y)
  return y_;
}
inline void Orientation::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Orientation.y)
}

// optional float z = 3;
inline void Orientation::clear_z() {
  z_ = 0;
}
inline float Orientation::z() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Orientation.z)
  return z_;
}
inline void Orientation::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Orientation.z)
}

// optional float w = 4;
inline void Orientation::clear_w() {
  w_ = 0;
}
inline float Orientation::w() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Orientation.w)
  return w_;
}
inline void Orientation::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.Orientation.w)
}

// -------------------------------------------------------------------

// Joint

// optional string name = 1;
inline void Joint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Joint::name() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Joint.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Joint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bodyskeleton.Joint.name)
}
inline void Joint::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bodyskeleton.Joint.name)
}
inline void Joint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bodyskeleton.Joint.name)
}
inline ::std::string* Joint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bodyskeleton.Joint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Joint::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Joint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bodyskeleton.Joint.name)
}

// optional string parent = 2;
inline void Joint::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Joint::parent() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Joint.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Joint::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bodyskeleton.Joint.parent)
}
inline void Joint::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bodyskeleton.Joint.parent)
}
inline void Joint::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bodyskeleton.Joint.parent)
}
inline ::std::string* Joint::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:bodyskeleton.Joint.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Joint::release_parent() {
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Joint::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:bodyskeleton.Joint.parent)
}

// optional .bodyskeleton.Position position = 3;
inline bool Joint::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void Joint::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::bodyskeleton::Position& Joint::position() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Joint.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::bodyskeleton::Position* Joint::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::bodyskeleton::Position;
  }
  // @@protoc_insertion_point(field_mutable:bodyskeleton.Joint.position)
  return position_;
}
inline ::bodyskeleton::Position* Joint::release_position() {
  
  ::bodyskeleton::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline void Joint::set_allocated_position(::bodyskeleton::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bodyskeleton.Joint.position)
}

// optional .bodyskeleton.Orientation orientation = 4;
inline bool Joint::has_orientation() const {
  return !_is_default_instance_ && orientation_ != NULL;
}
inline void Joint::clear_orientation() {
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) delete orientation_;
  orientation_ = NULL;
}
inline const ::bodyskeleton::Orientation& Joint::orientation() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.Joint.orientation)
  return orientation_ != NULL ? *orientation_ : *default_instance_->orientation_;
}
inline ::bodyskeleton::Orientation* Joint::mutable_orientation() {
  
  if (orientation_ == NULL) {
    orientation_ = new ::bodyskeleton::Orientation;
  }
  // @@protoc_insertion_point(field_mutable:bodyskeleton.Joint.orientation)
  return orientation_;
}
inline ::bodyskeleton::Orientation* Joint::release_orientation() {
  
  ::bodyskeleton::Orientation* temp = orientation_;
  orientation_ = NULL;
  return temp;
}
inline void Joint::set_allocated_orientation(::bodyskeleton::Orientation* orientation) {
  delete orientation_;
  orientation_ = orientation;
  if (orientation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bodyskeleton.Joint.orientation)
}

// -------------------------------------------------------------------

// User

// optional int32 id = 1;
inline void User::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 User::id() const {
  // @@protoc_insertion_point(field_get:bodyskeleton.User.id)
  return id_;
}
inline void User::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bodyskeleton.User.id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bodyskeleton

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_body_5fskeleton_2eproto__INCLUDED
