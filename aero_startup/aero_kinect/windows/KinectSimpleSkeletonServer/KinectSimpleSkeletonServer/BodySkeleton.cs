// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: body_skeleton.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bodyskeleton {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class BodySkeleton {

      #region Descriptor
      public static pbr::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbr::FileDescriptor descriptor;

      static BodySkeleton() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChNib2R5X3NrZWxldG9uLnByb3RvEgxib2R5c2tlbGV0b24iKwoIUG9zaXRp", 
              "b24SCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiOQoLT3JpZW50", 
              "YXRpb24SCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAISCQoBdxgE", 
              "IAEoAiJ/CgVKb2ludBIMCgRuYW1lGAEgASgJEg4KBnBhcmVudBgCIAEoCRIo", 
              "Cghwb3NpdGlvbhgDIAEoCzIWLmJvZHlza2VsZXRvbi5Qb3NpdGlvbhIuCgtv", 
              "cmllbnRhdGlvbhgEIAEoCzIZLmJvZHlza2VsZXRvbi5PcmllbnRhdGlvbiIS", 
              "CgRVc2VyEgoKAmlkGAEgASgFMoABCgxCb2R5U2tlbGV0b24SNAoIR2V0VXNl", 
              "cnMSEi5ib2R5c2tlbGV0b24uVXNlchoSLmJvZHlza2VsZXRvbi5Vc2VyIgAS", 
              "OgoLR2V0U2tlbGV0b24SEi5ib2R5c2tlbGV0b24uVXNlchoTLmJvZHlza2Vs", 
              "ZXRvbi5Kb2ludCIAMAFCDwoHZXguZ3JwY6ICA1JUR2IGcHJvdG8z"));
        descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbr::FileDescriptor[] { },
            new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
              new pbr::GeneratedCodeInfo(typeof(global::Bodyskeleton.Position), new[]{ "X", "Y", "Z" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Bodyskeleton.Orientation), new[]{ "X", "Y", "Z", "W" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Bodyskeleton.Joint), new[]{ "Name", "Parent", "Position", "Orientation" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Bodyskeleton.User), new[]{ "Id" }, null, null, null)
            }));
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bodyskeleton.Proto.BodySkeleton.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    public Position Clone() {
      return new Position(this);
    }

    public const int XFieldNumber = 1;
    private float x_;
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    public const int YFieldNumber = 2;
    private float y_;
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    public const int ZFieldNumber = 3;
    private float z_;
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Orientation : pb::IMessage<Orientation> {
    private static readonly pb::MessageParser<Orientation> _parser = new pb::MessageParser<Orientation>(() => new Orientation());
    public static pb::MessageParser<Orientation> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bodyskeleton.Proto.BodySkeleton.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Orientation() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Orientation(Orientation other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
    }

    public Orientation Clone() {
      return new Orientation(this);
    }

    public const int XFieldNumber = 1;
    private float x_;
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    public const int YFieldNumber = 2;
    private float y_;
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    public const int ZFieldNumber = 3;
    private float z_;
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    public const int WFieldNumber = 4;
    private float w_;
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Orientation);
    }

    public bool Equals(Orientation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      if (W != other.W) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      if (W != 0F) hash ^= W.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    public void MergeFrom(Orientation other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Joint : pb::IMessage<Joint> {
    private static readonly pb::MessageParser<Joint> _parser = new pb::MessageParser<Joint>(() => new Joint());
    public static pb::MessageParser<Joint> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bodyskeleton.Proto.BodySkeleton.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Joint() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Joint(Joint other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      Position = other.position_ != null ? other.Position.Clone() : null;
      Orientation = other.orientation_ != null ? other.Orientation.Clone() : null;
    }

    public Joint Clone() {
      return new Joint(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int PositionFieldNumber = 3;
    private global::Bodyskeleton.Position position_;
    public global::Bodyskeleton.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    public const int OrientationFieldNumber = 4;
    private global::Bodyskeleton.Orientation orientation_;
    public global::Bodyskeleton.Orientation Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Joint);
    }

    public bool Equals(Joint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Orientation, other.Orientation)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (orientation_ != null) hash ^= Orientation.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (orientation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Orientation);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (orientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
      }
      return size;
    }

    public void MergeFrom(Joint other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Bodyskeleton.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.orientation_ != null) {
        if (orientation_ == null) {
          orientation_ = new global::Bodyskeleton.Orientation();
        }
        Orientation.MergeFrom(other.Orientation);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              position_ = new global::Bodyskeleton.Position();
            }
            input.ReadMessage(position_);
            break;
          }
          case 34: {
            if (orientation_ == null) {
              orientation_ = new global::Bodyskeleton.Orientation();
            }
            input.ReadMessage(orientation_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bodyskeleton.Proto.BodySkeleton.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    public User(User other) : this() {
      id_ = other.id_;
    }

    public User Clone() {
      return new User(this);
    }

    public const int IdFieldNumber = 1;
    private int id_;
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as User);
    }

    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      return size;
    }

    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
