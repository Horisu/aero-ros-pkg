(load "package://aero_2015_06_drc/euslisp/aero-drc-testbed.l")

(make-drc-testbed-models-with-aero)

(defun setup ()
  ; set to initial position
  (init-testbed *stair* :pos #f(-300 0 0))
  (objects (list *stair*))
  (send *aero* :draw-on)
  )

;; model samples


;; real robot logs

(defun log-0516 (&key (real nil))
  ;; (go? `(send *aero* :reset-terrain-pose))
  (go? `(send *aero* :move-waist #f(0 0 -100)))
  (go? `(send *aero* :lower :rleg :move-end-pos #f(-100 -100 0) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(-100 -100 0)))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 100) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 100) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 -20) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(0 0 100)))
  (go? `(send *aero* :lower :lleg :move-end-pos #f(-200 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(-50 50 0)))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(0 0 100) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(0 0 100) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(0 0 -20) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(0 0 180) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(150 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rarm :move-end-pos #f(0 0 -50) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 10) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 50) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 50) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 50) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 40) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(150 -50 0) :world :rotation-axis nil))
  (go? `(send *aero* :lower :larm :move-end-pos #f(0 0 -60) :world :rotation-axis nil))
  (go? `(send *aero* :lower :lleg :move-end-pos #f(100 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(100 0 0)))
  (go? `(send *aero* :lower :lleg :move-end-pos #f(100 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rleg :move-end-pos #f(100 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(100 0 0)))
  (go? `(send *aero* :lower :lleg :move-end-pos #f(100 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :upper :torso :waist-p :joint-angle 30))
  (go? `(send *aero* :upper :torso :waist-p :joint-angle 20))
  (go? `(send *aero* :upper :arms :move-end-pos #f(300 0 200) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rleg :move-end-pos #f(100 0 0) :world :rotation-axis nil))
  (go? `(send *aero* :move-waist #f(100 0 0)))
  (go? `(send *aero* :lower :rleg :move-end-pos #f(0 0 100) :world :rotation-axis nil))
  (go? `(send *aero* :lower :rleg :move-end-pos #f(0 0 -100) :world :rotation-axis nil))
  )
