# ########################################
#
# aero_ros_bridge 
#
# Author:     Wesley P. Chan (Univ. of Tokyo)
# Modified:   2015-05-15
#
# ########################################



==================================

Table of Contents

1. Compiling
2. Usage 
   2.1. Euslisp model
   2.2. Communication with real robot


=================================




=================================

1. Compiling 

=================================

Download the latest model files from h-yaguchi/share/aero/models_yyyymmdd.tar.gz into aero_ros_bridge.
Extract the models_yyymmdd.tar.gz. This should create a models folder under aero_ros_bridge.

catkin build or catkin make aero_ros_bridge.





=================================

2. Usage

=================================

$ roseus euslisp/aero-interface.l
$ aero-init

This will create *aero*, which in turn creates *aero-upper* and *aero-lower*,
as well as *ri*.

*aero* is the euslisp model, and *ri* is the interface to the real robot.



==============================

2.1. Euslisp model

==============================

*aero* is made up of two euslisp robot models: *aero-upper* and *aero-lower*.
*aero* provides methods for the full body. E.g. full body stroke vector calculation, full body collision check, and full body center of mass computation.

*aero-upper* and *aero-lower* can be used to directly call methods of the upper and lower robots models as well.



==============================

2.2. Communication with real robot

==============================

*ri* is an instance of aero-upper-interface. However, it is created to communicate with the full body of the real robot.
Communication and control of the entire real robot will be done using *ri*.





