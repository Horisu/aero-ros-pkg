# ########################################
#
# aero_ros_bridge 
#
# Author:     Wesley P. Chan (Univ. of Tokyo)
# Modified:   2015-05-21
#
# ########################################



==================================

Table of Contents

1. Compatibility
2. Compiling
3. Usage 
   3.1. Euslisp model
   3.2. Communication with real robot


=================================


=================================

1. Compatibility 

=================================

Currently this package has been tested on Ubuntu 12.04 and is working with Ubuntu 12.04.

It does NOT complie on Ubuntu 14.04 at the moment due to compatibility issues of hrpsys_ros_bridge.



=================================

2. Compiling 

=================================

Download the latest model files from h-yaguchi/share/aero/models_yyyymmdd.tar.gz into aero_ros_bridge.
Extract the models_yyymmdd.tar.gz. This should create a models folder under aero_ros_bridge.

catkin build or catkin make aero_ros_bridge.





=================================

3. Usage

=================================

$ roseus euslisp/aero-interface.l
$ aero-init

This will create *aero*, which in turn creates *aero-upper* and *aero-lower*,
as well as *ri*.

*aero* is the euslisp model, and *ri* is the interface to the real robot.


Note that *aero* is NOT a child class of euscollada-robot. It is simply a chlid class of Object.

This means that certain commands like 

$ objects *aero* 

will NOT work. Instead, a method :draw-on is implemented for visualizing the full model.




==============================

3.1. Euslisp model

==============================

*aero* is made up of two euslisp robot models: *aero-upper* and *aero-lower*.
*aero* provides methods for the full body. E.g. full body stroke vector calculation, full body collision check, and full body center of mass computation.

*aero-upper* and *aero-lower* can be used to directly call methods of the upper and lower robots models as well.



==============================

3.2. Communication with real robot

==============================

*ri* is an instance of aero-upper-interface. However, it is created to communicate with the full body of the real robot.
Communication and control of the entire real robot will be done using *ri*.





